{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","state","calc_result","display_result","memory","calc","cmd","_this","setState","eval","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","className","type","name","value","onClick","e","Component"],"mappings":"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","file":"static/js/main.4312acd6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    calc_result: \"\",\n    display_result: 0,\n    memory: 0\n  };\n\n  // 四則演算\n  calc = cmd => {\n    if (cmd === \"=\") {\n      this.setState({\n        calc_result: eval(this.state.calc_result)\n      });\n    } else if (cmd === \"AC\") {\n      this.setState({\n        calc_result: \"\"\n      });\n    } else {\n      this.setState({\n        calc_result: this.state.calc_result + cmd + \"\"\n      });\n    }\n  };\n\n  // メモリー機能\n  memory = cmd => {\n    if (cmd === \"M+\") {\n      if (this.state.calc_result == \"\") {\n        return;\n      }\n      this.setState({\n        memory: this.state.memory + eval(this.state.calc_result),\n        calc_result: \"\",\n        display_result: eval(this.state.calc_result)\n      });\n    } else if (cmd === \"M-\") {\n      if (this.state.calc_result == \"\") {\n        return;\n      }\n      this.setState({\n        memory: this.state.memory - eval(this.state.calc_result),\n        calc_result: \"\",\n        display_result: eval(this.state.calc_result)\n      });\n    } else if (cmd === \"MC\") {\n      this.setState({\n        memory: 0\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container text-center custom-middle\">\n        <div className=\"row result_field\">\n          <div className=\"col font-weight-bold\">\n            メモリ: {this.state.memory}\n          </div>\n          <div className=\"col font-weight-bold\">\n            計算結果: {this.state.display_result}\n          </div>\n        </div>\n        <input\n          type=\"text\"\n          name=\"text\"\n          className=\"form-control mb-2\"\n          value={this.state.calc_result}\n        />\n        <div className=\"row\">\n          <button\n            className=\"col mr-1 btn btn-outline-success\"\n            onClick={e => this.memory(\"MC\")}\n          >\n            MC\n          </button>\n          <button\n            className=\"col mr-1 btn btn-outline-success\"\n            onClick={e => this.memory(\"M-\")}\n          >\n            M-\n          </button>\n          <button\n            className=\"col mr-1 btn btn-outline-success\"\n            onClick={e => this.memory(\"M+\")}\n          >\n            M+\n          </button>\n          <button\n            className=\"col mr-1 btn btn-success\"\n            onClick={e => this.calc(\"*\")}\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"row mt-1\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"7\")}\n          >\n            7\n          </button>\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"8\")}\n          >\n            8\n          </button>\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"9\")}\n          >\n            9\n          </button>\n          <button\n            className=\"col mr-1 btn btn-success\"\n            onClick={e => this.calc(\"+\")}\n          >\n            ＋\n          </button>\n        </div>\n        <div className=\"row mt-1\">\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"4\")}\n          >\n            4\n          </button>\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"5\")}\n          >\n            5\n          </button>\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"6\")}\n          >\n            6\n          </button>\n          <button\n            className=\"col mr-1 btn btn-success\"\n            onClick={e => this.calc(\"/\")}\n          >\n            ÷\n          </button>\n        </div>\n        <div className=\"row mt-1\">\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"1\")}\n          >\n            1\n          </button>\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"2\")}\n          >\n            2\n          </button>\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"3\")}\n          >\n            3\n          </button>\n          <button\n            className=\"col mr-1 btn btn-success\"\n            onClick={e => this.calc(\"-\")}\n          >\n            -\n          </button>\n        </div>\n        <div className=\"row mt-1\">\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"0\")}\n          >\n            0\n          </button>\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\"00\")}\n          >\n            00\n          </button>\n          <button\n            className=\"btn btn-light col mr-1\"\n            onClick={e => this.calc(\".\")}\n          >\n            ・\n          </button>\n          <button\n            className=\"col mr-1 btn btn-success\"\n            onClick={e => this.calc(\"=\")}\n          >\n            =\n          </button>\n        </div>\n        <div className=\"row mt-1\">\n          <button className=\"col mr-1 btn btn-success\">C</button>\n          <button\n            className=\"col mr-1 btn btn-success\"\n            onClick={e => this.calc(\"AC\")}\n          >\n            AC\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}