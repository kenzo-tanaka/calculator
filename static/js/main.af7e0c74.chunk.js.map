{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","state","formula","display_result","memory","calc_component","operator","calc_component_array","adnum","num","_this","setState","calc","cmd","eval","pop","slice","concat","cmd_and_num","clear","join","i","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","className","onClick","e","_this3","_this4","_this5","type","name","value","renderMemory","renderCalc","renderNum","renderClear","Component"],"mappings":"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","file":"static/js/main.af7e0c74.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    formula: \"\",\n    display_result: 0,\n    memory: 0,\n    calc_component: \"\", //入力中の数値を一時的に保管\n    operator: \"\", //入力中の演算子を一時的に保管\n    calc_component_array: []\n  };\n\n  // 数値入力\n  adnum = num => {\n    this.setState({\n      formula: this.state.formula + num + \"\",\n      calc_component: this.state.calc_component + num + \"\",\n      operator: \"\"\n    });\n  };\n\n  // 四則演算(×/+/÷/-/=)\n  calc = cmd => {\n    if (cmd === \"=\") {\n      if (this.state.calc_component === \"\") {\n        return;\n      }\n      this.setState({\n        formula: eval(this.state.formula),\n        calc_component: \"\",\n        display_result: eval(this.state.formula)\n      });\n    } else {\n      if (this.state.operator !== \"\") {\n        this.state.calc_component_array.pop();\n        this.setState({\n          operator: cmd,\n          formula: this.state.formula.slice(0, -1) + cmd,\n          calc_component_array: this.state.calc_component_array.concat(cmd)\n        });\n      } else {\n        const cmd_and_num = [this.state.calc_component, cmd];\n        this.setState({\n          calc_component_array: this.state.calc_component_array.concat(\n            cmd_and_num\n          ),\n          formula: this.state.formula + cmd + \"\",\n          calc_component: \"\",\n          operator: cmd\n        });\n      }\n    }\n  };\n\n  // クリア機能(C/AC)\n  clear = cmd => {\n    if (cmd === \"AC\") {\n      this.setState({\n        formula: \"\",\n        calc_component: \"\",\n        calc_component_array: []\n      });\n    } else if (cmd === \"C\") {\n      if (this.state.calc_component === \"\") {\n        return;\n      } else {\n        this.setState({\n          calc_component: \"\",\n          formula: this.state.calc_component_array.join(\"\")\n        });\n      }\n    }\n  };\n\n  // メモリー機能(M+/M-/MC)\n  memory = cmd => {\n    if (cmd === \"M+\") {\n      if (this.state.formula === \"\" || this.state.calc_component === \"\") {\n        return;\n      }\n      this.setState({\n        memory: this.state.memory + eval(this.state.formula),\n        formula: \"\",\n        display_result: eval(this.state.formula),\n        calc_component_array: [],\n        calc_component: \"\"\n      });\n    } else if (cmd === \"M-\") {\n      if (this.state.formula === \"\" || this.state.calc_component === \"\") {\n        return;\n      }\n      this.setState({\n        memory: this.state.memory - eval(this.state.formula),\n        formula: \"\",\n        display_result: eval(this.state.formula),\n        calc_component_array: [],\n        calc_component: \"\"\n      });\n    } else if (cmd === \"MC\") {\n      this.setState({\n        memory: 0\n      });\n    }\n  };\n\n  // 各種レンダリング\n  renderNum(i) {\n    return (\n      <button className=\"btn btn-light col mr-1\" onClick={e => this.adnum(i)}>\n        {i}\n      </button>\n    );\n  }\n\n  renderCalc(cmd) {\n    if (cmd === \"/\") {\n      return (\n        <button\n          className=\"col mr-1 btn btn-success\"\n          onClick={e => this.calc(cmd)}\n        >\n          ÷\n        </button>\n      );\n    } else if (cmd === \"*\") {\n      return (\n        <button\n          className=\"col mr-1 btn btn-success\"\n          onClick={e => this.calc(cmd)}\n        >\n          ×\n        </button>\n      );\n    }\n\n    return (\n      <button\n        className=\"col mr-1 btn btn-success\"\n        onClick={e => this.calc(cmd)}\n      >\n        {cmd}\n      </button>\n    );\n  }\n\n  renderMemory(cmd) {\n    return (\n      <button\n        className=\"col mr-1 btn btn-outline-success\"\n        onClick={e => this.memory(cmd)}\n      >\n        {cmd}\n      </button>\n    );\n  }\n\n  renderClear(cmd) {\n    return (\n      <button\n        className=\"col mr-1 btn btn-success\"\n        onClick={e => this.clear(cmd)}\n      >\n        {cmd}\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container text-center custom-middle\">\n        <div className=\"row result_field\">\n          <div className=\"col font-weight-bold\">\n            メモリ: {this.state.memory}\n          </div>\n          <div className=\"col font-weight-bold\">\n            計算結果: {this.state.display_result}\n          </div>\n        </div>\n        <input\n          type=\"text\"\n          name=\"text\"\n          className=\"form-control mb-2\"\n          value={this.state.formula}\n        />\n        <div className=\"row\">\n          {this.renderMemory(\"MC\")}\n          {this.renderMemory(\"M-\")}\n          {this.renderMemory(\"M+\")}\n          {this.renderCalc(\"*\")}\n        </div>\n        <div className=\"row mt-1\">\n          {this.renderNum(7)}\n          {this.renderNum(8)}\n          {this.renderNum(9)}\n          {this.renderCalc(\"+\")}\n        </div>\n        <div className=\"row mt-1\">\n          {this.renderNum(4)}\n          {this.renderNum(5)}\n          {this.renderNum(6)}\n          {this.renderCalc(\"/\")}\n        </div>\n        <div className=\"row mt-1\">\n          {this.renderNum(1)}\n          {this.renderNum(2)}\n          {this.renderNum(3)}\n          {this.renderCalc(\"-\")}\n        </div>\n        <div className=\"row mt-1\">\n          {this.renderNum(0)}\n          {this.renderNum(\"00\")}\n          {this.renderNum(\".\")}\n          {this.renderCalc(\"=\")}\n        </div>\n        <div className=\"row mt-1\">\n          {this.renderClear(\"C\")}\n          {this.renderClear(\"AC\")}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}